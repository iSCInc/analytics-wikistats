#!/bin/bash
ulimit -v 400000
set -e 
set -o pipefail

wikistats=/a/wikistats_git
analytics=$wikistats/analytics
perl=$analytics/perl
# perl=/home/ezachte/wikistats/analytics/perl # tests
csv_rc=$analytics/csv  # rc for report card
csv_dumps=$wikistats/dumps/csv 

function echo_exec { 
  printf '>%.s' {1..120} 
  echo 
  echo $1
  printf '<%.s' {1..120}
  echo
  echo  
  $1
} 

clear

# Prepare several csv files, ready for importing into analytics database / front-end (e.g. LIMN)
# All generated files have _in_ in name signalling these contain data ready for importing into database / front-end

# www.walkernews.net/2007/06/03/date-arithmetic-in-linux-shell-scripts
yyyymm=$(date -d "1 month ago" +"%Y-%m")
yyyymm2=$(date -d "2 month ago" +"%Y-%m")
#yyyymm=2012-08 # !!!!!!  yyyymm "1 month ago" on 31 July gives 2012-07 !!!1 
yyyymmdd=$(date +"%Y_%m_%d")
echo process data up to $yyyymm and write to rc-$yyyymm.zip
log=$analytics/logs/prep_csv_$yyyymmdd.log 

mkdir -p $csv_rc/$yyyymm
rm -f $csv_rc/$yyyymm/comparison* 

cd $perl
# AnalyticsPrepBinariesData.pl read counts for binaries which were generated by wikistats 
# and which reside in /a/wikistats/csv_[project code]/StatisticsPerBinariesExtension.csv
# It filters and reorganizes data and produces analytics_in_binaries.csv
# Output csv contains: project code, language, month, extension name, count

echo_exec "perl AnalyticsPrepBinariesData.pl -i $csv_dumps -o $csv_rc/$yyyymm | tee $log | cat"

# AnalyticsPrepComscoreData.pl scans /a/analytics/comscore for newest comScore csv files (with data for last 14 months) 
# parses those csv files, adds/replaces data from these csv files into master files (containing full history)
# and generates input csv file analytics_in_comscore.csv ready for importing
#
# note : these csv files were manually downloaded from http://mymetrix.comscore.com/app/report.aspx 
# and given more descriptive names, script finds newest files based on partial name search 
#
# -r replace (default is add only)
# -i input folder, contains manually downloaded csv files from comScore (or xls files manually converted to csv) 
# -m master files with full history
# -o output csv file, with reach per region, UV's per region and UV's per top web property, ready for import

# perl AnalyticsPrepComscoreData.pl -r -i $csv_rc/comscore -m /a/wikistats_git/analytics/csv/history -o $csv_rc | tee -a $log | cat
echo_exec "perl AnalyticsPrepComscoreData.pl -r -i $csv_rc/comscore -m /a/wikistats_git/analytics/csv/history -o $csv_rc/$yyyymm | tee -a $log | cat"

# AnalyticsPrepWikiCountsOutput.pl reads a plethora of fields from several csv files from wikistats process
# - It filters and reorganizes data and produces analytics_in_wikistats.csv, ready for import 

echo_exec "perl AnalyticsPrepWikiCountsOutputMisc.pl -i $csv_dumps -o $csv_rc/$yyyymm            | tee -a $log | cat"

echo_exec "perl AnalyticsPrepWikiCountsOutputCore.pl -i $csv_dumps -o $csv_rc/$yyyymm -m $yyyymm | tee -a $log | cat"

# analytics_in_page_views.csv is written daily as part of WikiCountsSummarizeProjectCounts.pl 
# part of (/home/ezachte/pageviews_monthly.sh job) 
# which processes hourly projectcounts files (per wiki page view totals for one hour) from http://dammit.lt/wikistats
# and generates several files on different aggregation levels
# only action here is to copy data to this folder to have everything in one place
# note: unlike folder name suggests this file contains stats for all projects


echo_exec "cp $csv_dumps/csv_wp/analytics_in_page_views.csv $csv_rc/$yyyymm " # adjust to wikistat_git when dump process has been migrated

echo_exec "cp $csv_dumps/csv_wp/wikilytics_in_pageviews.csv $csv_rc/$yyyymm " # adjust to wikistat_git when dump process has been migrated

# compare csv files $yyyymm2 and $yyyymm
echo_exec "perl AnalyticsCompareMonthlyCsvFiles.pl -c $csv_rc -1 $yyyymm -2 $yyyymm2 -t 2 -f wikilytics_in_pageviews.csv" 
echo_exec "perl AnalyticsCompareMonthlyCsvFiles.pl -c $csv_rc -1 $yyyymm -2 $yyyymm2 -t 2 -f wikilytics_in_wikistats_core_metrics.csv"

# echo_exec "cd $csv_rc/$yyyymm | zip rc-$yyyymm.zip wikilytics*.csv" # pipe does not work
echo_exec "cd $csv_rc/$yyyymm"
echo_exec "zip rc-$yyyymm.zip wikilytics*.csv comparison*.txt"

echo -e "\n>>> ready <<<"
